(()=>{"use strict";eval("\n;// CONCATENATED MODULE: ./src/project.js\nconst projectObj = (projectTitle) => {\n    const todoList = [];\n  \n    return { projectTitle, todoList };\n  };\n  \n  /* harmony default export */ const src_project = (projectObj);\n;// CONCATENATED MODULE: ./src/todo.js\nconst todoObj = (title, description, dueDate, priority) => ({\n    title, description, dueDate, priority,\n  });\n  \n  /* harmony default export */ const todo = (todoObj);\n;// CONCATENATED MODULE: ./src/selectors.js\nconst mainContent = document.getElementById('content');\nconst todos = document.createElement('div');\nconst todoPara = document.createElement('p');\nconst mySelect = document.querySelector('#mySelect');\nconst projectForm = document.querySelector('#projectForm');\nconst newProjBtn = document.querySelector('#newProjBtn');\nconst projectInput = document.querySelector('#projectTitle');\nconst addProjectBtn = document.querySelector('#addProjectBtn');\nconst todoForm = document.getElementById('todoForm');\nconst todoTitle = document.getElementById('todoTitle');\nconst todoDescription = document.getElementById('todoDescription');\nconst todoDate = document.getElementById('todoDate');\nconst todoPriority = document.getElementById('todoPriority');\nconst addTodoBtn = document.getElementById('addTodoBtn');\nconst newTodoBtn = document.getElementById('newTodoBtn');\nconst cancelProjBtn = document.querySelector('#cancelProjectBtn');\nconst cancelTodoBtn = document.querySelector('#cancelTodoBtn');\nconst delTodoBtn = document.getElementsByClassName('delBtn');\nconst saveTodoBtn = document.querySelector('#saveTodoBtn');\n\nconst todoContents = todoPara.innerHTML;\n\n\n;// CONCATENATED MODULE: ./src/projectForm.js\n\n\nconst projForm = (() => {\n  const createProjectForm = () => {\n    projectForm.style.display = 'block';\n  };\n\n  const hideProjectForm = () => {\n    projectForm.style.display = 'none';\n  };\n\n  const createTodoForm = () => {\n    todoForm.style.display = \"block\";\n  };\n\n  const hideTodoForm = () => {\n    todoForm.style.display = \"none\";\n  };\n\n  const showCreateTodo = () => {\n    addTodoBtn.style.display = 'block';\n    saveTodoBtn.style.display = 'none';\n  };\n\n  const hideCreateTodo = () => {\n    addTodoBtn.style.display = 'none';\n    saveTodoBtn.style.display = 'block';\n  };\n\n  return {\n    createProjectForm,\n    hideProjectForm,\n    createTodoForm,\n    hideTodoForm,\n    showCreateTodo,\n    hideCreateTodo,\n  };\n})();\n\n/* harmony default export */ const src_projectForm = (projForm);\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\nlet allProjects = [];\nlet currentProject = '';\nlet currentTodo = '';\n\nconst storeAllProjects = () => {\n  const store = JSON.stringify(allProjects);\n  localStorage.setItem('allProjects', store);\n};\n\nconst fetchTodos = () => {\n  const store = localStorage.getItem('allProjects');\n  allProjects = JSON.parse(store);\n  if (!allProjects) {\n    allProjects = [];\n  }\n};\n\nconst selectOption = () => {\n  allProjects.forEach((proj) => {\n    const option = document.createElement('option');\n    option.innerHTML = proj.projectTitle;\n    mySelect.appendChild(option);\n  });\n};\n\nmySelect.onchange = () => {\n  currentProject = mySelect.value;\n  showCurrentProject(currentProject);\n};\n\nconst showCurrentProject = (currentProject) => {\n  allProjects.forEach((proj) => {\n    if (proj.projectTitle === currentProject) {\n      todos.innerHTML = '';\n      if (proj.todoList.length > 0) {\n        for (let i = 0; i < proj.todoList.length; i += 1) {\n          const todoDiv = document.createElement('div');\n          todoDiv.classList.add('todoDiv');\n          let todoDetails = `Title: ${proj.todoList[i].title} </br></br>`;\n          todoDetails += `Description: ${proj.todoList[i].description} </br></br>`;\n          todoDetails += `Date: ${proj.todoList[i].dueDate} </br></br>`;\n          todoDetails += `Priority: ${proj.todoList[i].priority} </br></br>`;\n          todoDiv.innerHTML = todoDetails;\n          const editBtn = document.createElement('button');\n          const deleteBtn = document.createElement('button');\n          const complete = document.createElement('input');\n          const label = document.createElement('Label');\n\n          editBtn.innerHTML = 'Edit';\n          deleteBtn.innerHTML = 'Delete';\n          editBtn.classList.add('editBtn');\n          deleteBtn.classList.add('delBtn');\n          editBtn.value = i;\n          deleteBtn.value = i;\n          complete.setAttribute('type', 'checkbox');\n          complete.setAttribute('id', 'complete');\n          complete.setAttribute('value', 'Complete');\n          complete.classList = 'btn btn-success px-4 mx-2';\n          label.innerHTML = 'Complete';\n          label.classList = 'text-white';\n\n          complete.addEventListener('click', () => {\n            if (complete.checked === true) {\n              todoDiv.style.backgroundColor = 'green';\n              storeAllProjects();\n            } else {\n              todoDiv.style.backgroundColor = '';\n            }\n          });\n\n          todoDiv.appendChild(editBtn);\n          todoDiv.appendChild(deleteBtn);\n          todoDiv.appendChild(complete);\n          todoDiv.appendChild(label);\n          todos.appendChild(todoDiv);\n          mainContent.appendChild(todos);\n        }\n      } else {\n        todos.innerHTML = '<h3 class=\"text-danger font-weight-bold\">No Todos! Create one...</h3>';\n      }\n    }  \n  });\n};\n\nconst defaults = () => {\n  fetchTodos();\n  showCurrentProject(currentProject);\n  selectOption();\n};\n\nconst createProject = (project) => {\n  const newProject = src_project(project);\n  allProjects.push(newProject);\n  storeAllProjects();\n  mySelect.innerHTML = '';\n  selectOption();\n  src_projectForm.hideProjectForm();\n  alert('Project created successfully');\n};\n\nconst createTodo = (title, description, dueDate, priority) => {\n  const newTodo = todo(title, description, dueDate, priority);\n  allProjects.forEach((proj) => {\n    if (proj.projectTitle === currentProject) {\n      proj.todoList.push(newTodo);\n      storeAllProjects();\n      showCurrentProject(currentProject);\n      src_projectForm.hideTodoForm();\n      alert(`${proj.todoList.length + ' Todo(s) added succesfully!'}`);\n    }\n  });\n};\n\nconst validateProjInput = (e) => {\n  e.preventDefault();\n  if (projectInput.value === '') {\n    alert('Project cannot be empty');\n  } else {\n    createProject(projectInput.value);\n  }\n};\n\nconst validateTodoInput = (e) => {\n  e.preventDefault();\n  if (todoTitle.value === '') {\n    alert('Title cannot be empty!');\n  }\n    else if (todoDescription.value === '') {\n      alert('Please, add a brief description');\n  }\n    else if (todoDate.value === '') {\n      alert('Date cannot be empty!');\n  } else {\n    createTodo(todoTitle.value, todoDescription.value, todoDate.value, todoPriority.value);\n  }\n};\n\nconst src_delTodoBtn = (target) => {\n  allProjects.forEach((proj) => {\n    if (proj.projectTitle === currentProject) {\n      proj.todoList.splice(target.value, 1);\n      storeAllProjects();\n      showCurrentProject(currentProject);\n    }\n  });\n};\n\nconst editDelAction = (event) => {\n  if (event.classList == 'editBtn') {\n    renderEditTodoForm(event);\n  } else if (event.classList == 'delBtn') {\n    src_delTodoBtn(event);\n    alert(\"Todo will be deleted...\");\n  }\n};\n\nconst renderEditTodoForm = (target) => {\n  src_projectForm.createTodoForm();\n  src_projectForm.hideCreateTodo();\n  allProjects.forEach((proj) => {\n    if (proj.projectTitle === currentProject) {\n      const edit = proj.todoList[target.value];\n      todoTitle.value = edit.title;\n      todoDescription.value = edit.description;\n      todoDate.value = edit.dueDate;\n      todoPriority.value = edit.priority;\n      currentTodo = target.value;\n    }\n  });\n};\n\nconst updateTodo = () => {\n  src_projectForm.showCreateTodo();\n  src_projectForm.hideTodoForm();\n  allProjects.forEach((proj) => {\n    if (proj.projectTitle === currentProject) {\n      const updatedTodo = todo(todoTitle.value, todoDescription.value, todoDate.value, todoPriority.value);\n      proj.todoList[currentTodo] = updatedTodo;\n      const Index = allProjects.findIndex((idx => idx.projectTitle == currentProject));\n      allProjects[Index] = proj;\n      storeAllProjects();\n      showCurrentProject(currentProject);\n    }\n  });\n};\n\ndefaults();\n\nnewProjBtn.addEventListener('click', () => {\n  src_projectForm.createProjectForm();\n  projectForm.reset();\n});\n\naddProjectBtn.addEventListener('click', (e) => {\n  validateProjInput(e);\n});\n\naddTodoBtn.addEventListener('click', (e) => {\n  validateTodoInput(e);\n  console.log('Todo created!');\n});\n\nnewTodoBtn.addEventListener('click', () => {\n  console.log('Todo Form');\n  src_projectForm.createTodoForm();\n  todoForm.reset();\n});\n\ncancelProjBtn.addEventListener('click', () => { \n  src_projectForm.hideProjectForm();\n});\n\ncancelTodoBtn.addEventListener('click', () => { \n  src_projectForm.hideTodoForm();\n  src_projectForm.showCreateTodo();\n});\n\ntodos.addEventListener('click', (e) => {\n  editDelAction(e.target);\n  console.log('Working');\n});\n\nsaveTodoBtn.addEventListener('click', (e) => {\n  e.preventDefault();\n  updateTodo();\n  console.log('Edited');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///129\n")})();